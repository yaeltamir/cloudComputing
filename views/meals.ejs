<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <title>Personal - SugarSnap</title>
        <!-- Favicon-->
        <link rel="icon" type="image/x-icon" href="assets/logo3.png" />
        <!-- Custom Google font-->
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@100;200;300;400;500;600;700;800;900&amp;display=swap" rel="stylesheet" />
        <!-- Bootstrap icons-->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css" rel="stylesheet" />
        <!-- Core theme CSS (includes Bootstrap)-->
        <link href="css/styles.css" rel="stylesheet" />
    </head>
    <body class="d-flex flex-column h-100 bg-light">
        <main class="flex-shrink-0">
            <!-- Navigation-->
            <nav class="navbar navbar-expand-lg navbar-light bg-white py-3">
                <div class="container px-5">
                    <a class="navbar-brand" href="home"><span class="fw-bolder text-primary">Home</span></a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav ms-auto mb-2 mb-lg-0 small fw-bolder">
                            <li class="nav-item"><a class="nav-link" href="home">Home</a></li>
                            <li class="nav-item"><a class="nav-link" href="meals">Meals</a></li>
                            <li class="nav-item"><a class="nav-link" href="historyGraph">History</a></li>
                            <li class="nav-item"><a class="nav-link" href="updateDetails">Update</a></li>
                            <li class="nav-item"><a class="nav-link" href="projects">Messages</a></li> 
                        </ul>
                    </div>
                </div>
            </nav>





          <!-- Page Content-->
<div class="container px-5 my-5">
    <div class="text-center mb-5">
        <h1 class="display-5 fw-bolder mb-0"><span class="text-gradient d-inline">Insert New Meal</span></h1>
    </div>
    <div class="row gx-5 justify-content-center">
        <div class="col-lg-8 col-xl-6">


            <!-- Insert New Meal Form -->
            <form action="/meals/add" method="POST">

                <!-- Date Input -->
                <div class="mb-4">
                    <label for="dateInput" class="form-label">Enter Date</label>
                    <input type="date" class="form-control" id="dateInput" name="date" required>
                </div>

                <% if (sugarPrediction) { %> <!-- אם יש הודעה -->
                    <p><%= sugarPrediction %></p>
                    <p> <%= message %></p>
                <% } %> 

                <!-- Time Input -->
                <div class="mb-4">
                    <label for="timeInput" class="form-label">Enter Time</label>
                    <input type="time" class="form-control" id="timeInput" name="time" required>
                </div>

                <!-- Meal Type Input -->
                <div class="mb-4">
                    <label for="mealType" class="form-label">Select Meal Type</label>
                    <select class="form-select" id="mealType" name="kindOfMeal" required>
                        <option value="" selected disabled>Select Meal</option>
                        <option  value="breakfast">Breakfast</option>
                        <option value="lunch">Lunch</option>
                        <option value="dinner">Dinner</option>
                        <option value="snack">Other (Snack)</option>
                    </select>
                </div>

 <!-- Image URL Input -->

 <div class="mb-4">
    <label for="imageUrlInput" class="form-label">Enter Image URL</label>
    <input type="url" class="form-control" id="imageUrlInput" name="imageUrl" placeholder="Enter image URL" required>
</div>

<!-- Display Image from URL -->
<div class="mb-4">
    <img id="imagePreview" src="" alt="Image Preview" style="display:none; max-width: 100%; height: auto;">
</div>

<!-- Action Button -->
<div class="mb-4">
    <button type="button" class="btn btn-primary" onclick="loadImage()">Submit URL</button>
</div>

<!-- Glucose Level Selection -->
<div class="mb-4">
    <label class="form-label">Glucose Level: Choose one option below</label>
    <div class="d-flex gap-2">

        <!-- אזור להצגת התחזית וההודעה - חבוי בהתחלה
<div id="predictionSection" style="display: none; margin-top: 20px;">
    <p id="sugarPrediction"></p>
    <p id="predictionMessage"></p>
</div> -->




<!-- כפתור לחיזוי רמת הסוכר -->
<button type="button" class="btn btn-primary" onclick="predictGlucose()">Predict Glucose Level</button>

        <!-- Button to Predict Glucose Level
        <button type="submit" class="btn btn-primary" onclick="predictGlucose()">Predict Glucose Level</button> -->

        <!-- Button to Manually Enter Glucose Level -->
        <button type="button" class="btn btn-success" onclick="showManualInput()">Enter Manually</button>
    </div>
</div>

<!-- Glucose Level Manual Input (Hidden initially) -->
<div class="mb-4" id="manualGlucoseInput" style="display: none;">
    <label for="glucoseLevel" class="form-label">Enter Current Glucose Level (after 2 hours)</label>
    <input type="number" class="form-control" id="glucoseLevel" name="sugarLevel" placeholder="Enter your glucose level" required>
</div>

<div id="predictionSection" class="mb-4" style="display: none;">
    <div class="p-4 rounded-3 bg-light border">
        <h5 class="fw-bold text-center text-gradient mb-3">Prediction Result</h5>
        <p id="sugarPrediction" class="text-dark text-center fs-5"></p>
        <p id="predictionMessage" class="text-muted text-center"></p>
    </div>
</div>

<!-- Action Button -->
<div class="mb-4">
    <button type="submit" class="btn btn-primary" >Submit Data</button>
</div>  
            </form>

            
            <% if (successMessage) { %>
                <div class="alert alert-success">
                    <p><%= successMessage %></p>
                </div>
            <% } %> 
        </div>
    </div>
</div>


<script>
    // Set the current date and time when the page loads
    window.onload = function() {
        // Set current date
        const today = new Date().toISOString().split('T')[0]; // Format as YYYY-MM-DD
        document.getElementById('dateInput').value = today;

        // Set current time
        const now = new Date();
        const hours = String(now.getHours()).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');
        document.getElementById('timeInput').value = `${hours}:${minutes}`;
    };

    function loadImage() {
        const imageUrl = document.getElementById('imageUrlInput').value; // Get the URL input value
        const imagePreview = document.getElementById('imagePreview');

        // Check if URL is valid
        if (imageUrl) {
            // Set the src of the img element to the entered URL
            imagePreview.src = imageUrl;
            imagePreview.style.display = 'block';
        } else {
            // If no URL is provided or it's invalid, hide the image preview
            imagePreview.style.display = 'none';
            alert('Please enter a valid image URL');
        }
    }

    function callFunction() {
        // Logic to handle the form submission or glucose calculation
        let date = document.getElementById('dateInput').value;
        let time = document.getElementById('timeInput').value;
        let meal = document.getElementById('mealType').value;
        let glucose = document.getElementById('glucoseLevel').value;

        // Example action (log to console)
        console.log(`Date: ${date}, Time: ${time}, Meal: ${meal}, Glucose Level: ${glucose}`);
    }

        // Function to handle glucose prediction
//         function predictGlucose() {
//          // שליפת הנתונים מהטופס
//          const formData = new FormData(document.querySelector('form'));

// // יצירת אובייקט JSON מתוך הנתונים שבטופס
// const data = {};
// formData.forEach((value, key) => {
//     data[key] = value;
// });

// // שליחת הנתונים לשרת
// fetch('/meals/predict', {
//     method: 'POST',
//     headers: {
//         'Content-Type': 'application/json'
//     },
//     body: JSON.stringify(data)
// })
// .then(response => response.json())
// .then(data => {
//     console.log('Prediction result:', data);
//     // כאן אפשר להוסיף קוד לטיפול בתוצאה (הצגת הודעה למשתמש, עיבוד תוצאה וכו')
// })
// .catch(error => {
//     console.error('Error:', error);
// });
// }
// פונקציה לשליחת AJAX בעת לחיצה על כפתור Predict Glucose Level
// function predictGlucose() {
//     const mealData = {
//         date: document.getElementById('dateInput').value,
//         time: document.getElementById('timeInput').value,
//         kindOfMeal: document.getElementById('mealType').value,
//         imageUrl: document.getElementById('imageUrlInput').value,
//         sugarLevel: document.getElementById('glucoseLevel').value || null
//     };

//     fetch('/meals/predict', {
//         method: 'POST',
//         headers: {
//             'Content-Type': 'application/json',
//         },
//         body: JSON.stringify(mealData)
//     })
//     .then(response => response.json())
//     .then(data => {
//         // כאן אפשר לעדכן את התצוגה עם התוצאה
//         document.getElementById('sugarPrediction').innerHTML = `<p>Predicted Sugar Level: ${data.prediction}</p>`;
//         document.getElementById('message').innerHTML = `<p>${data.message}</p>`;
//     })
//     .catch(error => console.error('Error:', error));
// }

function predictGlucose() {
    const mealData = {
        date: document.getElementById('dateInput').value,
        time: document.getElementById('timeInput').value,
        kindOfMeal: document.getElementById('mealType').value,
        imageUrl: document.getElementById('imageUrlInput').value,
        sugarLevel: document.getElementById('glucoseLevel').value || null
    };

    fetch('/meals/predict', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(mealData)
    })
    .then(response => response.json())
    .then(data => {
        // עדכון התצוגה עם התוצאה מהשרת
       const sugarPrediction= document.getElementById('sugarPrediction');
        const predictionMessage= document.getElementById('predictionMessage');
        sugarPrediction.innerText = `Predicted Sugar Level: ${data.prediction}`;
        predictionMessage.innerText = data.message;


        // בדיקת ערך התחזית ושינוי הצבע השולט בהתאם
        const predictionSection = document.getElementById('predictionSection');
        if (data.prediction > 100) {
            //<p id="sugarPrediction" class="text-dark text-center fs-5"></p>
    //    <p id="predictionMessage" class="text-muted text-center"></p>
  predictionSection.style.backgroundColor = '#f8d7da'; // רקע אדום בהיר
  predictionSection.style.color = '#721c24'; // טקסט אדום כהה
  //sugarPrediction.style.backgroundColor = '#f8d7da'; // רקע אדום בהיר
 // sugarPrediction.style.color = '#721c24'; // טקסט אדום כהה
  //predictionMessage.style.backgroundColor = '#f8d7da'; // רקע אדום בהיר
 // predictionMessage.style.color = '#721c24'; // טקסט אדום כהה
} else {
  predictionSection.style.backgroundColor = '#d4edda'; // רקע ירוק בהיר
  predictionSection.style.color = '#155724'; // טקסט ירוק כהה
}

// הצגת האזור החבוי
predictionSection.style.display = 'block';

    })
    .catch(error => console.error('Error:', error));
}


    // Function to show manual input field for glucose level
    function showManualInput() {
        const manualInput = document.getElementById('manualGlucoseInput');
        manualInput.style.display = 'block';
    }

    // Function to submit form data
    function submitForm() {
        let date = document.getElementById('dateInput').value;
        let time = document.getElementById('timeInput').value;
        let meal = document.getElementById('mealType').value;
        let glucose = document.getElementById('glucoseLevel').value || "Predicted";

        // Example action (log to console)
        console.log(`Date: ${date}, Time: ${time}, Meal: ${meal}, Glucose Level: ${glucose}`);
    }
</script>




        </main>
        <!-- Footer-->
        <footer class="bg-white py-4 mt-auto">
            <div class="container px-5">
                <div class="row align-items-center justify-content-between flex-column flex-sm-row">
                    <div class="col-auto"><div class="small m-0">Copyright &copy; Your Website 2023</div></div>
                    <div class="col-auto">
                        <a class="small" href="#!">Privacy</a>
                        <span class="mx-1">&middot;</span>
                        <a class="small" href="#!">Terms</a>
                        <span class="mx-1">&middot;</span>
                        <a class="small" href="#!">signUp</a>
                    </div>
                </div>
            </div>
        </footer>
        <!-- Bootstrap core JS-->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
        <!-- Core theme JS-->
        <script src="js/scripts.js"></script>
    </body>
</html>
